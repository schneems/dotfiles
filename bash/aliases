alias asbot='~/Documents/projects/badger/bin/asbot'
alias badger='~/Documents/projects/badger/bin/badger'
alias gitx.='gitx .'
alias vim.='vim .'
alias empty='git commit --allow-empty -m empty'
alias yeet='git push heroku main || git push heroku master'
alias utc='TZ="UTC" date '

function acab {
  if [ -x "$(git remote | grep upstream)" ]; then
    git pull --rebase upstream main || git pull --rebase upstream master
  else
    git pull --rebase origin main || git pull --rebase origin master
  fi
}

alias subl='vim'

alias prs='hub pr list -f "%au %H %U%n" | grep schneems | column -t'

function drun {
  docker run -it --rm $1 bash
}

alias rbuildpack="heroku buildpacks:remove heroku/ruby; heroku buildpacks:add https://github.com/heroku/heroku-buildpack-ruby"

function debugapp {
  hs repo:clone -a $1
  cd $1
  git rrh
  git co support
  heroku create
  heroku buildpacks:set https://github.com/ryandotsmith/null-buildpack
  git push heroku support:master || git push heroku master || git push heroku main
  heroku buildpacks:clear
  empty
}

function mktmpdir {
  cd /tmp
  dir_name=$(ruby -e "require 'securerandom'; puts SecureRandom.hex")
  mkdir $dir_name
  cd $dir_name
  echo "$ mkdir -p /tmp/$dir_name; cd /tmp/$dir_name"
}

function reproapp {
  mktmpdir
  echo "source 'https://rubygems.org'" > Gemfile
  echo "gem 'rake'" >> Gemfile
  bundle install
  git init .
  git add .
  git commit -m first
  heroku create
}

# notifyme
function amdone {
  if [ $? -eq 0 ]
  then
    afplay /System/Library/Sounds/Submarine.aiff
  else
    afplay /System/Library/Sounds/Blow.aiff
  fi
}

# https://gist.github.com/napcs/8e640df0e8abfe047e6b8c048a14470e
notify() {
  if [ $? -eq 0 ]; then
    osascript -e 'display notification "The command worked" with title "Success"'
  else
    osascript -e 'display notification "The command failed" with title "Failed"'
  fi
}

alias hbr='proj; cd heroku-buildpack-ruby'
alias h='heroku'
alias be='bundle exec'
alias b='bundle exec'
alias dbundle='ruby -I ~/Documents/projects/bundler/lib ~/Documents/projects/bundler/exe/bundle'

function ruby_19_hash {
  find . -name $1 -exec perl -p -i -e 's/([^:]):(\w+)\s*=>/\1\2:/g' {} \;
}

# Command Enhancements

alias rm=trash

alias start_redis='redis-server /usr/local/etc/redis.conf &'
alias start_postgres='pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start'
alias start_cassandra='cassandra -f'
alias start_memcached='launchctl load -w /usr/local/Cellar/memcached/1.4.5/com.danga.memcached.plist'
alias start_mysql='launchctl load -w /usr/local/Cellar/mysql/5.1.49/com.mysql.mysqld.plist'

alias console='name_tab console; pry' # https://github.com/pry/pry/wiki/Setting-up-Rails-to-use-Pry
alias server='rails s thin'

alias wp='cd ~/Sites/public'

alias hurl='name_tab hurl; proj; cd hurl; bundle exec shotgun config.ru'

alias proj='cd ~/Documents/projects'
alias work='cd ~/Documents/projects/work'

alias hist='puts Readline::HISTORY.entries.split("exit").last[0..-2].join("\n")'


# Utility
alias reload!='source ~/bin/dotfiles/bashrc'
alias ea='mate -w ~/bin/dotfiles/bash/aliases && reload' # Edit aliases
alias ee="mate ~/bin/dotfiles/bash/env"

## custom tab name ###
function name_tab {
  echo -n -e "\033]0;$1\007"
}

## Git Autocomplete ##

_complete_git() {
  if [ -d .git ]; then
    branches=`git branch -a | cut -c 3-`
    tags=`git tag`
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${branches} ${tags}" -- ${cur}) )
  fi
}
complete -F _complete_git git checkout


# Common -- Some are from Damian Conway
alias a='ls -A' # -A all except literal . ..
alias la="ls -A -l -G"
alias c='clear'
alias cdd='cd -'  # goto last dir cd'ed from
alias cl='clear; l'
function cdc() {
    cd $1; ls
}
alias cls='clear; ls'
alias l.='ls -d .[^.]*'
alias l='ls -lhGt'  # -l long listing, most recent first
                    # -G color
alias lh="ls -lh"
alias ll='ls -lhG'  # -l long listing, human readable, no group info
alias lt='ls -lt' # sort with recently modified first
alias md='mkdir -p'
alias s='cd ..'   # up one dir

function take() {
    mkdir -p "$1"
    cd "$1"
}

alias e='exit'
alias k9="killall -9"
function killnamed () {
    ps ax | grep $1 | cut -d ' ' -f 2 | xargs kill
}
function zipr() {
  zip -r $1.zip $1
}

# Finder
alias o='open . &'
alias ff='open -a Firefox'

# Git
alias co="checkout"
alias ungit="find . -name '.git' -exec rm -rf {} \;"
alias gb='git branch'
alias gba='git branch -a'
alias gc='git commit -v'
alias gca='git commit -v -a'
# Commit pending changes and quote all args as message
function gg() {
    git commit -v -a -m "$*"
}
alias gco='git checkout'
alias gd='git diff'
alias gdm='git diff master'
alias gl='git pull'
alias gnp="git-notpushed"
alias gp='git push'
alias gst='git status'
alias gt='git status'
alias g='git status'
alias eg='mate .git/config'
# Git clone from GitHub
function gch() {
  git clone git://github.com/$USER/$1.git
}
